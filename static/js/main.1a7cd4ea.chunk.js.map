{"version":3,"sources":["Components/Slider/Slider.js","Components/DisplatResult/DisplayResult.js","Components/LoanCalculate/LoanCalculate.js","App.js","serviceWorker.js","index.js"],"names":["Slider","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","className","props","title","type","min","max","step","onChange","e","changeValue","target","Component","DisplatResult","_this$props$result","result","_this$props$result$mo","monthlyPayment","_this$props$result$mo2","amount","_this$props$result$in","interestRate","LoanCalculate","_getPrototypeOf2","_len","length","args","Array","_key","call","concat","state","years","res","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetchData","stop","_callee2","responce","_context2","axios","get","sent","setState","data","setAmount","_this2","_this3","Components_Slider_Slider","setYears","DisplatResult_DisplayResult","App","Components_LoanCalculate_LoanCalculate","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a7cd4ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../Slider/Slider.css\";\r\nexport class Slider extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sliderClass\">\r\n        <h4>{this.props.title} </h4>\r\n        <div className=\"slide-label\">\r\n          <input\r\n            className=\"slider\"\r\n            type=\"range\"\r\n            min={this.props.min}\r\n            max={this.props.max}\r\n            value={this.props.value}\r\n            step={this.props.step}\r\n            onChange={e => {\r\n              this.props.changeValue(e.target.value);\r\n            }}\r\n          />\r\n          <label>{this.props.value}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n","import React, { Component } from \"react\";\r\nimport \"../DisplatResult/DisplayResult.css\";\r\n\r\nexport class DisplatResult extends Component {\r\n  render() {\r\n    const {\r\n      monthlyPayment: { amount = 0 } = {},\r\n      interestRate = 0\r\n    } = this.props.result;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h3>Monthly Result</h3>\r\n          <div className=\"month\">\r\n            <div className=\"item\">MonthlyIntrestRate : {interestRate}</div>\r\n            <div className=\"item\">Amount : {amount}</div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Yearly Result</h3>\r\n\r\n          <div className=\"item\">Amount : {amount * 12}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplatResult;\r\n","import React, { Component } from \"react\";\r\nimport \"../LoanCalculate/LoanCalculate.css\";\r\nimport Slider from \"../Slider/Slider\";\r\nimport axios from \"axios\";\r\nimport DisplatResult from \"../DisplatResult/DisplayResult\";\r\n\r\nexport class LoanCalculate extends Component {\r\n  state = {\r\n    amount: 500,\r\n    years: 6,\r\n    res: {}\r\n  };\r\n  componentDidMount = async () => {\r\n    this.fetchData();\r\n  };\r\n  fetchData = async () => {\r\n    const responce = await axios.get(\r\n      `https://ftl-frontend-test.herokuapp.com/interest?amount=${\r\n        this.state.amount\r\n      }&numMonths=${this.state.years}`\r\n    );\r\n    this.setState({ res: responce.data });\r\n  };\r\n  setAmount = amount => {\r\n    this.setState(\r\n      {\r\n        amount\r\n      },\r\n      () => {\r\n        this.fetchData();\r\n      }\r\n    );\r\n  };\r\n  setYears(years) {\r\n    this.setState(\r\n      {\r\n        years\r\n      },\r\n      () => {\r\n        this.fetchData();\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Loan\">\r\n        <div className=\"slide\">\r\n          <Slider\r\n            title=\"Loan amount : between $500 and $5000 \"\r\n            min=\"500\"\r\n            max=\"5000\"\r\n            step=\"100\"\r\n            value={this.state.amount}\r\n            changeValue={value => this.setAmount(value)}\r\n          />\r\n          <Slider\r\n            title=\"Loan Duration : 6 and 24 Months\"\r\n            min=\"6\"\r\n            max=\"24\"\r\n            step=\"1\"\r\n            value={this.state.years}\r\n            changeValue={value => this.setYears(value)}\r\n          />\r\n        </div>\r\n        <div className=\"result\">\r\n          <DisplatResult result={this.state.res} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoanCalculate;\r\n","import React from \"react\";\nimport LoanCalculate from \"./Components/LoanCalculate/LoanCalculate\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LoanCalculate />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}